// Упражнение 12.24. Напишите программу, которая читает строку со тандартного
// устройства ввода в динамически созданный символьный массив. Объясните, как
// программа обеспечивает ввод данных переменного размера. Проверьте свою
// программу, введя строку, размер которой превышает длину зарезервированного
// массива.

// В книге на мой взгляд не было достаточно разжована тема строк типа обычного
// C. Человека, который плохо знаком с Си, это задание может ввести в легкий
// ступор. Я не стал исключением. Либо я невнимательно выполнял задание. В общем
// у меня не сразу заработало. Требуется более углубленное изучение строк C.

// На момент написания этого задания я не изучал обычный Cи так досканально, как
// эту книгу, поэтому не могу с полной уверенностью утвеждать, как должен
// работать тот или иной инструмент.

// В программе была использована функция sctcat(dest, str), которая
// конкатинирует строку str со строкой назначения dest. Строка dest заменяет
// свой значк '\0' на строку str.

// Если использовать функцию strcat() Для добавления строки
// большей по размеру, чем размер массива char, то произойдет переполнение
// буфера, что может привести к нежелательным последствиям.
// Если добавляемая строка больше по размеру, чем массив char, strcat() не
// проверяет размер буфера и будет продолжать коапировать символы до тех пор,
// коа не найдет символ '\0'.

// Чтобы избежать данных проблем достаточно иметь размер массива достаточно
// большой, чтобы хранить добавляемые элементы.

#include <string.h>

#include <iostream>
#include <string>

int main() {
  size_t n = 10;
  char* text = new char[n];  // символьный массив.
  std::string line;

  while (getline(std::cin, line)) {
    strcat(text, line.c_str());  // Добавление считанной строки в text.
    strcat(text, "\n");  // Добавление новой строки, чтобы было красиво.
  }

  std::cout << text << std::endl;

  delete[] text;  // Не забыть удалить.
}