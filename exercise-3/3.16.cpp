#include <iostream>
#include <string>
#include <vector>

// Упражнение 3.13. Сколько элементов находится в каждом из следующих векторов?
// Каковы значения этих элементов?

// Упражнение 3.16. Напишите программу, выводящую размер и содержимое вектора из
// упражнения 3.13. Проверье правильность своих ответов на это упражнение. При
// неправильных ответах повторно изучите раздел 3.3.1. (стр. 142).

int main() {
  std::vector<int>
      v1;  // Объявлен vecotor типа int, где нет ни единого элемента. Размер 0.

  std::vector<int> v2(
      10);  // Последовательность из 10 элементов, инициализированных типом int
            // значением по умолчанию 0.

  std::vector<int> v3(10, 42);  // Последовательность из 10 элементов,
                                // инициализированных значением 42.

  // Дополнительая проверка
  // std::vector<int> v8(10, 32, 40); // Не существует конструктора с таким
  // количеством аргументов.

  std::vector<int> v4{10};  // Последоватльность из одного элемента,
                            // инциализированного значением 10.

  std::vector<int> v5{
      10, 42};  // Последовательность из 2 элементов, инициализированных
                // значениями 10 и 42 соответственно.

  std::vector<std::string> v6{10};  // Последовательность из 10 элементов.

  std::vector<std::string> v7{
      10, "hi"};  // Последовательность из 10 элементов, каждый из которых
                  // инициализирован значением "hi".

  // Дополнительная проверка
  std::vector<std::string> v9{
      "hi", "hi2",
      "hi3"};  // Ok. Значения в списочной инициализацаии могут использоваться
               // для инициализации элементов вектора.

  std::cout << "Size v1: " << v1.size() << std::endl;  // 0
  std::cout << "Size v2: " << v2.size() << std::endl;  // 10
  std::cout << "Size v3: " << v3.size() << std::endl;  // 10
  std::cout << "Size v4: " << v4.size() << std::endl;  // 1
  std::cout << "Size v5: " << v5.size() << std::endl;  // 2
  std::cout << "Size v6: " << v6.size() << std::endl;  // 10
  std::cout << "Size v7: " << v7.size() << std::endl;  // 10
}