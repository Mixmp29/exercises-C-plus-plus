#include <iostream>
#include <vector>

// Упражнение 4.2. Используя таблицу раздела 4.12 (стр. 214 (поправка, у меня в
// книге это 227)), расставьте скобки в следующих выражениях, чтобы обозначить
// порядок группировки операндов:

int main() {
  std::vector<int> vec{1, 2, 4};

  std::cout << *vec.begin()
            << std::endl;  // Обращение к члену класса имеет больший приоритет.
                           // Сначало будет вызвана функция-член vec.begin(), а
                           // потом будет взято значение по оператору обращения
                           // к значению '*'. Эквивалентно *(vec.begin()).

  std::cout << *vec.begin() + 1
            << std::endl;  // Обращение к функции-члену имеет больший приоритет.
                           // Затем ниже больший приоритет имеет оператор
                           // обращения к значению. После самый наименьший
                           // приоритет имеет оператор сложения. То есть сначала
                           // вызовется функция-член vec.begin(), затем
                           // возьмется значение по адресу из begin() и потом
                           // оно сложится с 1. Результатом этого выражения
                           // будет 2. Эквивалентно (*(vec.begin())) + 1.
}