#include <iostream>
#include <vector>

// Упражнение 4.31. Программа этого раздела использовала префиксные операторы
// инкремента и декремента. Объясните, почему были использованы перфиксные, а не
// постфиксные версии? Что следует изменить для использования постфиксных
// версий? Перепишите программу с использованием постфиксных операторов.

// Постфиксный оператор инкремента в этом случае будет делать лишние операции,
// так как он хранит копию предыдущего значения до инкремента, которая никак не
// будет использоваться. Префиксный же просто увеличивает значение на 1.

int main() {
  std::vector<int> ivec = {1, 2, 3, 4, 5};
  std::vector<int>::size_type cnt = ivec.size();

  // Для использования постфиксного оператора можно убрать выражение в конце for
  // и поставить их внутри блока программы.
  for (std::vector<int>::size_type ix = 0; ix != ivec.size();) {
    ivec[ix++] = cnt--;
  }

  // При желании можно сделать простой while.
  std::vector<int>::size_type ix = 0;
  while (ix != ivec.size()) {
    ivec[ix++] = cnt--;
  }
}