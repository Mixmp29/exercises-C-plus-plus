// Упражнение 4.16. Хотя ниже приведены вполне допустимые выражения, их
// поведение может оказаться не таким, как предполагалось. Почему? Перепишите
// выражения так, чтобы они стали более понятными.

int* getPtr() { return 0; }

int main() {
  int *p = 0, i = 0;

  /* if (p = getPtr() != 0) { Предполагается, что сначала нужно было присвоить
                              переменной p значение функции getPtr(), а затем
                              результат проверить на равенство с 0. В итоге,
                              из-за разности приоритетов оператора отношения и
                              присвоения, сначала будет проверка на 0, а потом
                              присваивание результата проверки переменной p.
     ...
  } */

  if ((p = getPtr()) != 0) { /* ... */
  }  // Правильным будет добавление скобок для смены последовательности
     // вычисления.

  /* if (i = 42) { // Предполагается, что i проверяется на равенство с 42. В
                      итоге i присваивается значение 42 и результат
                      преобразуется в тип bool. В данном случае результат
                      отличен от 0, поэтомум условие оператора будет истинным.
    ...
  } */

  if (i == 42) {  // Правильным будет использовать оператор отношения на
                  // равенство '=='.
    /* ... */
  }
}