// Упражнение 2.30. Укажите по каждому из следующих объявлений, имеет ли
// объявляемый объект спецификатор const нижнего или верхнего уровня.

int main() {
  const int v2 = 0;  // Константа верхнего уровня.
  int v1 = v2;  // Нет константы ни верхрего, ни нижнего уровня.

  int *p1 = &v1,  // Константа указателя нижнего уровня совпадает с константой
                  // адреса нижнего уровня. У верхнего нет.
      &r1 = v1;  // Также константа нижнего совпадает с константой нижнего.

  // Нужно пояснение: в книге этому не уделено внимание, либо написано доволно
  // запутанно.

  // Можно задаться вопросом - что является нижним уровнем у адреса,
  // которым инициализируется указатель, когда у переменной в этом адресе есть
  // только верхний уровень? Как минимум для меня это было не сразу очевидно.

  // Дело в том, что сам адрес является верхним уровнем, и, судя по всему, он
  // также всегда является const, как в прочем и любой литерал. Нижним же
  // уровнем является значение, которое лежит по этому адресу.

  // Поскольку ссылки по строению похожи с указателем, то правила распознования
  // в целом такие же как описано выше.

  int i = 0;  // В задании нет, но предположим, что оно есть.

  const int *p2 = &v2,  // Константы нижнего уровня совпадают,
                        // константы вернхенго нет.
      *const p3 = &i,  // Константа верхнего уровня указателя совпадает с
                       // константой адреса переменой. Допускается инициализация
                       // с переменной нижнего уровная без константы, так как
                       // int можно преобразовать в const int (но не наоборот).
          &r2 = v2;  // Константа ссылки нижнего уровня совпадает с константой
                     // нижнего уровня переменной.
}