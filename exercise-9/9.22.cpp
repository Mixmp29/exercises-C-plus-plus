// Упражнение 9.22. С учетом того, что iv является вектором целых чисел, что не
// так со следующей программой? Как ее иможно исправить?

// "Добавление элементов в контейнер vector способно сделать недействительн ыми
// все существующие итераторы, ссылки и указатели на их элементы."

// 1) Сам итератор сбрасывается при добавлении, так как функция смещает элемент,
// на который он указывает. К тому же может произойти резервирование, то есть
// весь вектор будет перенесен в другую область памяти.

// 2) Если первый элемент не равен somve_val, то это бесконечный цикл.

// В программе подразумевает поиск элемента в последовательности, перед которым
// следует вставить элемент.

// Будет достаточным в конце тела цикла инкрементировать итератор и в теле if
// поставить break после вставки.

// Таким образом будет производиться поиск элемента без использования сброшенных
// итераторов.

#include <iostream>
#include <vector>

int main() {
  int some_val = 4;
  std::vector<int> iv = {1, 2, 3, 4, 5, 6, 7, 8};
  std::vector<int>::iterator iter = iv.begin(),
                             mid = iv.begin() + iv.size() / 2;

  // Перебор элементов последовательнсоти.
  while (iter != mid) {
    // Если нашелся нужный элемент...
    if (*iter == some_val) {
      // Вставь перед ним значение, но помни, что итератор сбросился.
      iv.insert(iter, 2 * some_val);
      break;  // Выйди из цикла.
    }

    ++iter;  // Переход к следующему элементу.
  }

  // Еще учше было бы использовать list для такого. Использовать vector,
  // допустимо, но дорого.

  for (auto elem : iv) std::cout << elem << ' ';
  std::cout << std::endl;
}