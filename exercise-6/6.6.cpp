#include <iostream>

// Упражнение 6.6. Объясните различия между параметром, локальной переменной и
// локальной статической переменной. Приведите пример функции в которой каждая
// из них могла бы быть полезной.

/* Локальная переменная - автоматический объект, который удаляется по окончании
 * тела функции. Объект соответствующей переменной видно только в области
 * видимости тела функции.
 *
 * Локальная статическая переменная - локальный статический объект, который не
 * удаляется по окончании тела функции. Он создается при запуске программы до
 * того как процесс выполнения дойдет до его определения. Переменная объеката
 * видна только в области видимости тела функции, время жизни самого объекта
 * остается продолжительным и он удаляется только по окончании всей программы.
 */

// Пример функции abs.
int func1(int val) {
  int sign = 1;  // Локальная переменна. Нужна только для определения знака.
  if (val < 0) sign *= -1;
  return val * sign;  // Значение sign больше не нужно, можно удалить объект.
  // Если понадобится вызвать эту функцию еще раз, то старое значение будет не
  // нужно. Переменная будет определена нужным заданным значением.
}

// Пример подсчета количества вызова функции.
int func2() {
  static int count = 0;  // Локальная статическая переменная. Ее нигде не видно
                         // кроме этой области видимости.
  return ++count;  // Копия объекта возращена, но сам он не удален. Его значение
                   // понадобится для дальнейшего подсчета.
}

int main() {
  std::cout << func1(-5) << std::endl;
  std::cout << func2() << std::endl;
  std::cout << func2() << std::endl;
}