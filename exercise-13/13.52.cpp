// Упражнение 13.52. Объясните подробно, что происходит при присвоении объектов
// класса HasPtr на стр. 685. В частоности, опишите шаг за шагом, что происходит
// со значениями hp, hp2 и параметром rhs в операторе присвоения класса HasPtr.

// Учитывая, что уже описан оператор присвоение использующий как копирование,
// так и присвоение, алгоритм будет выглядеть следующим образом:

/*

  В случае h2:

  1) h2 - l-value, вызвает оператор присвоение.

  2) Оператор присвоения берет в качетсве параметра значение аргумента правого
  операнда. В данном случае будет вызван конструктор копий.

  3) Конструктор копий резервирует новую строку с копией строки из hp и копирует
  значение i. То есть класс ведет себя как значение.

  4) Оператор присвоения вызывает функцию-член swap(*this, rhs), которая меняет
  местами левый операнд и скопированный правый.

  5) После обмена скопированный объект rhs выходит из области видимости и
  удаляется (вызывается диструктор).


  В случае std::move(h2):

  1) std::move(h2) - r-value, вызвает оператор присвоение.

  2) Оператор присвоения берет в качетсве параметра значение аргумента правого
  операнда. В данном случае будет вызван конструктор перемещения. Будет создан
  новый объект с помощью перемещения.

  3) Конструктор перемещения захватывает в объект this из ps значения
  переменных-членов, после чего в теле зануляет указатель аргумента, чтобы
  безопасно удалить его при вызове диструктора.

  4) Оператор присвоения вызывает функцию-член swap(*this, rhs), которая меняет
  местами левый операнд и перемещенный правый.

  5) После обмена перемещенный объект rhs выходит из области видимости и
  удаляется (вызывается диструктор). Деструктор в этом случае безопасен, так как
  объект имеет допустимые значения своих переменных-членов.



  В обоих случаях swap() делает перемещение между своими аргументами. Из этого
  следует, что неважно, какой конструктор будет выполнен.

 */