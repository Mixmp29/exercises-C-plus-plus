#ifndef WINDOW_MGR_H
#define WINDOW_MGR_H

#include <string>
#include <vector>

// Директива #include включает описанный в ней текст программы в место вызова.
// Это директива может вставлена в программу где угодно. Предположим, что в
// Screen описан класс с объявленной дружественной функцией-членом. Тогда
// определение класса Window_mgr будет выглядеть следующим образом:

class Window_mgr {
  using ScreenIndex = std::vector<Screen>::size_type;

 public:
  void clear(ScreenIndex);

 private:
  std::vector<Screen> screens;
};

#include "Screen.h"  // <- Сюда вставляется класс и все определения его фукнций.
//    В общем всё содержимое файла. Там же находится и объявление дружественной
//    функции, которое требует определенного класса (то есть завершенный класс).

// Если требуется записать класс в отдельный файл и сохранить дружбу отдельных
// функций-членов и классов, то как вариант. Но такой include можно потом
// упустить из виду в больших программах, что способстует появлению ошибок или
// затруднения их поиска.

void Window_mgr::clear(ScreenIndex i) {
  Screen& s = screens[i];
  s.contents = std::string(s.height * s.width, ' ');
}
#endif